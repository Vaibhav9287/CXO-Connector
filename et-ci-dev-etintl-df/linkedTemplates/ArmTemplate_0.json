{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "et-ci-dev-etintl-df"
		},
		"cxoDatabaseLS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'cxoDatabaseLS'"
		},
		"etintlstorageLS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'etintlstorageLS'"
		},
		"hboCompany_LS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'hboCompany_LS'"
		},
		"sqldbLS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'sqldbLS'"
		},
		"personifyLocalIS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'personifyLocalIS'"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.hubapi.com/crm/v3/objects/companies?limit=100"
		},
		"cxoDatabaseLS_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "et-ci-dev-cxo-sqlsrv.database.windows.net"
		},
		"cxoDatabaseLS_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "et-ci-dev-cxo-sqldb"
		},
		"cxoDatabaseLS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "saadmin"
		},
		"hboCompany_LS_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "et-ci-dev-cxo-sqlsrv.database.windows.net"
		},
		"hboCompany_LS_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "et-ci-dev-cxo-sqldb"
		},
		"hboCompany_LS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "saadmin"
		},
		"hubspotAPI_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.hubapi.com/crm/v3/objects/companies?limit=100"
		},
		"sqldbLS_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "et-ci-dev-etintl-dbsrv.database.windows.net"
		},
		"sqldbLS_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "et-ci-dev-etintl-sqldb"
		},
		"sqldbLS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Aamir"
		},
		"personifyLocalIS_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ET"
		},
		"personifyLocalIS_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "CASE770PROD_P360"
		},
		"personifyLocalIS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sa"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cxoDatabaseLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "To connect CXO Database",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('cxoDatabaseLS_properties_typeProperties_server')]",
					"database": "[parameters('cxoDatabaseLS_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('cxoDatabaseLS_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('cxoDatabaseLS_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/etintlstorageLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('etintlstorageLS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/etintlstoragePushkardemo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"containerUri": "https://etcidevetintlstorage.blob.core.windows.net/elevate",
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/hboCompany_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('hboCompany_LS_properties_typeProperties_server')]",
					"database": "[parameters('hboCompany_LS_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('hboCompany_LS_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('hboCompany_LS_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/hubspotAPI_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('hubspotAPI_LS_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqldbLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('sqldbLS_properties_typeProperties_server')]",
					"database": "[parameters('sqldbLS_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('sqldbLS_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('sqldbLS_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/personifyLocal-IR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "to connect local or self hosted IR",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel_etintlstorage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "etintlstorageLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Store Person",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DatabseBackup_4_FEB.xlsx",
						"container": "project"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/etintlstorageLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cxoDatabaseDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "cxoDatabaseLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "StorePerson"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/cxoDatabaseLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cxoSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "hboCompany_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "hbo",
					"table": "Company"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/hboCompany_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/elevatePushkardbdestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqldbLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "elevate",
					"table": "pushkardemo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sqldbLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/elevatePushkarsourcecsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "etintlstorageLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ADF Demo Sheet - Sheet1.csv",
						"container": "elevatepushkardemo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/etintlstorageLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/hubSpotRestService')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "hubspotAPI_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/hubspotAPI_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/personifyLocalIS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Self Hosted Linked Service.",
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('personifyLocalIS_properties_typeProperties_server')]",
					"database": "[parameters('personifyLocalIS_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('personifyLocalIS_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('personifyLocalIS_password')]"
					}
				},
				"connectVia": {
					"referenceName": "personifyLocal-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/personifyLocal-IR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pagination')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "JSON Pagination",
						"description": "Implement pagination using Absolute URL option.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": "Bearer CL3S5ZHSMhIbQgGAQAAAQSAAAAA4BwAAAAAAAAAAAAAAAAAgGJOJpgogsbHSGCjGzO0BMhTW9diYQOYl8fVy2fm3sUi9m5mXeDpTADEAR_8HAAAAAIAAAGB4ziyAAAAgAAAAFAAAOAAIANDD_xcBAAAggGf8h_8AALADAAAAAAAAAAAAAAIACLgCBAAAAAAAAAAAAAAAAAAAAEAAACBCFDlaxw6dQAwfovFCSFWAluK9gzXQSgNuYTFSAFoAYAA"
								},
								"paginationRules": {
									"AbsoluteUrl": "$.$.paging.next.link",
									"EndCondition:$results": "Empty"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "hubSpotRestService",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "cxoSQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "VB RND"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/hubSpotRestService')]",
				"[concat(variables('factoryId'), '/datasets/cxoSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "StoreID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StoreID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Sequence",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sequence",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PersonID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PersonID",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel_etintlstorage",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "cxoDatabaseDS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-05T07:13:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excel_etintlstorage')]",
				"[concat(variables('factoryId'), '/datasets/cxoDatabaseDS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/personifyLocalDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "personifyLocalIS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/personifyLocalIS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/personify Connector')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect personify local database to pull data in CXO DB",
				"activities": [
					{
						"name": "personify Connector",
						"description": "To connect personify local db",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"additionalColumns": [
									{
										"name": "APPLICATION",
										"value": "Personify"
									},
									{
										"name": "TYPE",
										"value": "Subscription"
									}
								],
								"sqlReaderQuery": {
									"value": "SELECT TOP 1 \n    v.CYCLE_BEGIN_DATE,\n    v.CYCLE_END_DATE,\n    v.GRACE_DATE,\n    v.SHIP_MASTER_CUSTOMER_ID,\n    v.PRODUCT_ID,\n    p.PRODUCT_ID AS PRODUCT_ID_FROM_PRODUCT,\n    p.subsystem,\n    p.LONG_NAME,\n    p.SHORT_NAME,\n    p.PRODUCT_CODE,\n    v.ORDER_DATE,\n\tv.MODDATE\nFROM ORDER_DETAIL v\nINNER JOIN PRODUCT p ON v.PRODUCT_ID = p.PRODUCT_ID\nWHERE v.CYCLE_BEGIN_DATE IS NOT NULL \n  AND v.CYCLE_END_DATE IS NOT NULL \n  AND v.GRACE_DATE IS NOT NULL;",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "APPLICATION",
											"type": "String"
										},
										"sink": {
											"name": "APPLICATION",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TYPE",
											"type": "String"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CYCLE_BEGIN_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "START_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CYCLE_END_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "END_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "GRACE_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "GRACE_TIME",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SHIP_MASTER_CUSTOMER_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CUSTOMER_ID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "PRODUCT_ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 12
										},
										"sink": {
											"name": "PRODUCT_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "subsystem",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SUBSYSTEM",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LONG_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRODUCT_NAME",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SHORT_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRODUCT_SHORT_NAME",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PRODUCT_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRODUCT_CODE",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ORDER_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "MODDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UpdatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "personifyLocalDS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "cxoDatabaseDS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-04T04:58:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/personifyLocalDS')]",
				"[concat(variables('factoryId'), '/datasets/cxoDatabaseDS')]"
			]
		}
	]
}